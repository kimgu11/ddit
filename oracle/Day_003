2024-0306-01)DDL(Data Definition Language)
    - 데이터 베이스내 객체(Object)를 생성, 변경, 삭제를 위한 명령
    - CREATE, ALTER DROP이 제공
    
1. 테이블 생성 명령
    - CREATE TABLE 테이블명(
        컬럼명 데이터타입[(크기)] [DEFAULT 값] [,]
                            :
        컬럼명 데이터타입[(크기)] [DEFAULT 값] [,]
        [CONSTRAINT 기본키 설정명 PRIMARY KEY (컬럼명[,컬럼명,...]) [,]
         CONSTRAINT 외래키 설정명 FOREIGN KEY (컬럼명) REFERENCES 테이블명(컬럼명) [ON DELETE CASCADE] [,]
                                                        :
         CONSTRAINT 외래키 설정명 FOREIGN KEY (컬럼명) REFERENCES 테이블명(컬럼명) [ON DELETE CASCADE]]);
         
        - '테이블명' : 생성할 테이블이름으로 기존의 테이블명과 중복되어서는 안됨
        - '컬럼명' : 테이블에 포함될 컬럼명으로 하나의 테이블에서 유일한 값이어야하며 
                    다른 테이블 내에서 같은 이름이 사용될 수 있음.
        - '데이터타입' : 오라클에서 사용되는 자료 타입
        - 'DEFAULT 값' 데이터 입력시 (INSERT 문) 사용자가 해당 컬럼에 저장될 값을 
                       지정하지 않으면 자동으로 저장될 값
        - '기본키설정명' : 기본키설정에 부여되는 이름으로 유일한 값이어야함
        - 'PRIMARY KEY(컬럼명[,컬럼명,...])' : 기본키로 정의할 컬럼명. 기본키가 하나 
                                        이상의 컬럼으로 구성되며 '.' 로 구분하여 기술
        - '외래키설정명' : 외래키설정에 부여되는 이름으로 유일한 값이어야하며 하나이상의 
                         외래키가 설정되면 각 각 다른 이름이 부여되어야함.
        - 'FOREIGN KEY(컬럼명)' : 외래키로 사용될 컬럼명
        - 'REFERENCES 테이블명(컬럼명)' : 해당 외래키가 참조하는 부모테이블명과 
                                        부모테이블에서 사용하고있는 컬럼명
        - 'ON DELETE CASCADE' : 부모테이블에서 해당 행이 삭제(DELETE) 될 경우 자식 테이블에서 
                            먼저 해당 자료를 삭제한 후 부모테이블의 자료를 삭제할 수 있도록설정
                            
사용예) 상품테이블(GOODS)을 생성하시오
    -----------------------------------------
    컬럼명     데이터타입       기본값     PK/FK여부
    -----------------------------------------
    GID     VARCHAR2(4)                 PK
    GNAME   VARCHAR2(50)
    PRICE   NUMBER(7)
    ------------------------------------------
    
    CREATE TABLE GOODS(
        GID     VARCHAR2(4),
        GNAME   VARCHAR2(50),
        PRICE   NUMBER(7) DEFAULT 0,
        CONSTRAINT pk_goods PRIMARY KEY (GID));

사용예) 고객테이블(CUSTOMERS)을 생성하시오
    -----------------------------------------
    컬럼명     데이터타입       기본값     PK/FK여부
    -----------------------------------------
    CID     VARCHAR2(4)                 PK
    CNAME   VARCHAR2(50)
    ------------------------------------------
        
    CREATE TABLE CUSTOMERS(
        CID     CHAR(4),
        CNAME   VARCHAR2(30),
        CONSTRAINT PK_CUSTOMERS PRIMARY KEY (CID));
        
사용예) 주문테이블(ORDERS)을 생성하시오
    -----------------------------------------
    컬럼명     데이터타입       기본값     PK/FK여부
    -----------------------------------------
    ORDER_ID     NUMBER(5)                 PK
    ORDER_DATE   DATE
    CID          CHAR(4)                   FK
    ------------------------------------------        
    
    CREATE TABLE ORDERS(
        ORDER_ID    NUMBER(5),
        ORDER_DATE  DATE,
        CID         CHAR(4),
        CONSTRAINT PK_ORDERS PRIMARY KEY (ORDER_ID),
        CONSTRAINT FK_ORDERS_CUSTOMERS FOREIGN KEY (CID)
            REFERENCES CUSTOMERS(CID));
        
사용예) 주문상품테이블(ORDERS_GOODS)을 생성하시오
    -----------------------------------------
    컬럼명     데이터타입       기본값     PK/FK여부
    -----------------------------------------
    ORDER_ID     NUMBER(5)                 PK & FK
    GID          VARCHAR2(4)               PK & FK
    ORDUER_QTY   NUMBER(4)      0        
    ------------------------------------------
    
    CREATE TABLE ORDER_GOODS(
        ORDER_ID    NUMBER(5),
        GID         VARCHAR2(4),
        ORDER_QTY   NUMBER(4) DEFAULT 0,
        CONSTRAINT PK_ORDER_GOODS PRIMARY KEY (ORDER_ID, GID),
        CONSTRAINT FK_OGOODS_ORDERS FOREIGN KEY (ORDER_ID)
            REFERENCES ORDERS(ORDER_ID),
        CONSTRAINT FK_OGOODS_GOODS FOREIGN KEY (GID)
            REFERENCES GOODS(GID));
        

2. ALTER TABLE 명령
    - 테이블명변경, 컬럼 추가, 컬럼 삭제, 컬럼 데이터 타입 변경, 컬럼명 변경에 사용
    
    1) 테이블명 변경
        (사용형식)
        ALTER TABLE 원본 테이블명 RENAME TO 변경된 테이블명;
        - 부모테이블의 이름이 변경되면 외래키 설정에 사용된 부모테이블의 이름은 자동 변경됨
        - 변경된 테이블명은 ROLLBACK되지 않음
        
사용예) GOODS 테이블의 이름을 PRODUCT로 변경하시오.
    ALTER TABLE GOODS RENAME TO PRODUCT;
    
    2) 테이블 컬럼 추가 
        - 해당 테이블에 새로운 컬럼을 추가 삽입
        (사용형식)
        ALTER TABLE 테이블명 ADD (컬럼명 데이터타입[(크기)]);
        
사용예) 주문(ORDERS)에 주문금액(ORDER_AMT NUMBER(8)) 컬럼을 추가하시오
    ALTER TABLE ORDERS ADD ORDER_AMT NUMBER(8);
    ALTER TABLE ORDERS MODIFY ORDER_AMT NUMBER(8) DEFAULT 0;
    
    3)테이블 컬럼 변경(데이터타입 OR 크기)
        - 해당 테이블에 컬럼의 크기나 데이터 타입을 변경
        - 이미 자료가 저장된 경우 작은 크기로 변경이나 변환될 
          수 없는 타입으로의 변환은 허용되지 않음
        - MODIFY 예약어 사용
        (사용형식)
        ALTER TABLE 테이블명 MODIFY(컬럼명 데이터타입[(크기)]);

사용예) HR계정의 사원테이블(EMPLOYEES)에 사원명(EMP_NAME)컬럼을 추가하시오
       데이터 타입은 VARCHAR2(60)이다.
       ALTER TABLE HR.EMPLOYEES ADD EMP_NAME VARCHAR2(60);
       
       UPDATE HR.EMPLOYEES SET EMP_NAME=FIRST_NAME||' '||LAST_NAME;
       
       SELECT EMP_NAME, FIRST_NAME, LAST_NAME
        FROM HR.EMPLOYEES;
        
        COMMIT;
        
사용예) HR계정의 EMP_NAME컬럼의 데이터 타입을 CHAR(60)으로 변경하시오
    ALTER TABLE HR.EMPLOYEES MODIFY (EMP_NAME CHAR(60));

사용예) HR계정의 EMP_NAME컬럼의 데이터 타입을 VARCHAR2(60)으로 변경하시오
    ALTER TABLE HR.EMPLOYEES MODIFY (EMP_NAME VARCHAR2(60));
    'TRIM은 빈공간을 삭제하는 명령어'
    UPDATE HR.EMPLOYEES SET EMP_NAME=TRIM(EMP_NAME);
    
    4)테이블 컬럼 삭제 
        - 존재하는 컬럼명 삭제 가능
        (사용형식)
        ALTER TABLE 테이블명 DROP COLUMN 컬럼명;

사용예)주문테이블(ORDERS)의 주문금액 컬럼(ORDER_AMT)을 삭제하시오
    ALTER TABLE ORDERS DROP COLUMN ORDER_AMT;
    
    5)테이블 컬럼명 변경
        -존재하는 컬럼이름 변경
        (사용형식)
        ALTER TABLE 테이블명 RENAME COLUMN OLD_COLUMN_NAME TO NEW_COLUMN_NAME;
        
사용예)상품테이블(PRODUCT)의 GID 컬럼을 PID로 변경하시오
    ALTER TABLE PRODUCT RENAME COLUMN GID TO PID;
